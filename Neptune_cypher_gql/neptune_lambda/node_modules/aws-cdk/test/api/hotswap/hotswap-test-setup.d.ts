import * as cxapi from '@aws-cdk/cx-api';
import { CloudFormation } from 'aws-sdk';
import * as lambda from 'aws-sdk/clients/lambda';
import * as stepfunctions from 'aws-sdk/clients/stepfunctions';
import { DeployStackResult } from '../../../lib';
import { Template } from '../../../lib/api/util/cloudformation';
import { TestStackArtifact } from '../../util';
export declare const STACK_ID = "stackId";
export declare function setupHotswapTests(): CfnMockProvider;
export declare function cdkStackArtifactOf(testStackArtifact?: Partial<TestStackArtifact>): cxapi.CloudFormationStackArtifact;
export declare function pushStackResourceSummaries(...items: CloudFormation.StackResourceSummary[]): void;
export declare function setCurrentCfnStackTemplate(template: Template): void;
export declare function stackSummaryOf(logicalId: string, resourceType: string, physicalResourceId: string): CloudFormation.StackResourceSummary;
export declare class CfnMockProvider {
    private mockSdkProvider;
    constructor();
    setUpdateStateMachineMock(mockUpdateMachineDefinition: (input: stepfunctions.UpdateStateMachineInput) => stepfunctions.UpdateStateMachineOutput): void;
    setUpdateFunctionCodeMock(mockUpdateLambdaCode: (input: lambda.UpdateFunctionCodeRequest) => lambda.FunctionConfiguration): void;
    tryHotswapDeployment(stackArtifact: cxapi.CloudFormationStackArtifact, assetParams?: {
        [key: string]: string;
    }): Promise<DeployStackResult | undefined>;
}
